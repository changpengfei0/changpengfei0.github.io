[{"title":"Nginx","url":"/2018/03/21/日常笔记/","content":"\n作用：html 服务器\n\n反向代理：隐藏被访问者\n\n正向代理：隐藏访问者\n\nnohup 命令运行由 Command参数和任何相关的 Arg参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 & （ 表示“and”的符号）到命令的尾部。\nnohup 是 no hang up 的缩写，就是不挂断的意思。\n\n不挂断地运行命令\n\nnohup python app.py >> /etc/supervisor/app.log 2>&1 &\n\n凡是访问静态 页面 ，交给nginx\n\n访问动态请求，交给gunicorn   例如：/api/students/\n\nnginx 配置   server。。。        localtion 。。。\n\nmysql 连接远程如果失败\n\n在装有MySQL的机器上登录MySQL mysql -u root -p密码\n执行use mysql;\n执行update user set host = '%' where user = 'root';这一句执行完可能会报错，不用管它。\n执行FLUSH PRIVILEGES;","categories":["nginx"]},{"title":"Centos添加删除用户组","url":"/2018/03/12/Centos7添加删除用户组/","content":"\n**1.新建用户** \n\n```shell\nadduser testuser ``//``新建testuser 用户 ``passwd` `testuser ``//``给testuser 用户设置密码\n```\n\n**2.建工作组** \n\n```shell\ngroupadd testgroup ``//``新建``test``工作组\n```\n\n**3.新建用户同时增加工作组** \n\n```shell\nuseradd` `-g testgroup testuser ``//``新建testuser用户并增加到testgroup工作组\n```\n\n//注：：-g 所属组 -d 家目录 -s 所用的SHELL\n\n**4.给已有的用户增加工作组**\n\n```shell\nusermod` `-G groupname username\n```\n\n**5.临时关闭** 在/etc/shadow文件中属于该用户的行的第二个字段（密码）前面加上*就可以了。想恢复该用户，去掉*即可 \n\n```shell\n或者使用如下命令关闭用户账号： ``passwd` `testuser –l ``//``重新释放： ``passwd` `testuser –u\n```\n\n**6.永久性删除用户账号**\n\n```shell\nusermod` `–r testuser ``//``（强制删除该用户的主目录和主目录下的所有文件和子目录）\n```\n\n**7.显示用户信息**\n\n```shell\nid` `user ``cat` `/etc/passwd` `| ``grep` `user\n```\n\n**补充:查看用户和用户组的方法** \n\n```shell\n用户列表文件：``/etc/passwd` `用户组列表文件：``/etc/group` `查看系统中有哪些用户：``cut` `-d : -f 1 ``/etc/passwd` `查看可以登录系统的用户：``cat` `/etc/passwd` `| ``grep` `-``v` `/sbin/nologin` `| ``cut` `-d : -f 1 ``查看用户操作：w命令(需要root权限) ``查看某一用户：w 用户名 ``查看登录用户：``who` ` 查看用户登录历史记录：last\n```","categories":["Linux"]},{"title":"Centos7新建用户并授权","url":"/2018/03/07/centos7新建用户并授权/","content":"**1、创建一个新用户：prefma**\n\n [root@localhost ~]# adduser prefma \n\n**2、为新用户创建初始化密码**\n\n```\n[root@localhost~]# passwd prefma\nChanging password for user prefma.\nNew password:             # 输入密码\nRetype new password:      # 再次输入密码\npasswd: all authentication tokens updated successfully.\n```\n\n \n\n**二、授权**\n\n个人用户的权限只可以在本home下有完整权限，其他目录需要别人授权。经常需要root用户的权限，可以通过修改sudoers文件来赋予权限。\n\n新创建的用户并不能使用sudo命令，需要给他添加授权。\n\n**1、查找sudoers文件路径并赋予权限**\n\n```\n1 [root@localhost~]# whereis sudoers                     # 查找sudoers文件路径\n2 sudoers: /etc/sudoers /etc/sudoers.d /usr/share/man/man5/sudoers.5.gz\n3 [root@localhost~]# ls -l /etc/sudoers                  # 查看权限\n4 -r--r----- 1 root root 3938 Sep  6  2017 /etc/sudoers  # 只有读权限\n5 [root@localhost~]# chmod -v u+w /etc/sudoers           # 赋予读写权限\n6 mode of ‘/etc/sudoers’ changed from 0440 (r--r-----) to 0640 (rw-r-----)\n```\n\n \n\n**2、修改sudoers文件**\n\n输入命令 vim /etc/sudoers 修改sudoers文件，添加新用户信息：\n\n```shell\n## Allow root to run any commands anywhere\nroot ALL=(ALL) ALL\nprefma ALL=(ALL) ALL #这个是新用户\n```\n\n然后输入命令 wq! 保存修改。\n\n**3、收回权限**\n\n```shell\n[root@localhost~]# chmod -v u-w /etc/sudoers\nmode of ‘/etc/sudoers’ changed from 0640 (rw-r-----) to 0440 (r--r-----)\n```\n\n**4、新用户登录**\n\n新建连接，使用新创建的用户登录，并进行验证，比如：\n\n```shell\n[prefma@localhost~]$ pwd\n/home/prefma\n[prefma@localhost~]$ ls -l /etc/sudoers\n-r--r----- 1 root root 3995 Oct 16 22:42 /etc/sudoers\n```\n\n ","tags":["博客"],"categories":["Linux"]}]